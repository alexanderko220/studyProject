@model studyProject.Models.WorkOrder

@{
    ViewBag.Title = "Edit";
}
<div class="jumbotron">
    <h2>Edit</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.WorkOrderId)
            @Html.HiddenFor(model => model.CustomerId)
            <div class="form-group row">
                @Html.LabelFor(model => model.CustomerId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.DisplayFor(model => model.Customer.AccountNumber, new { @class = "form-control" })

                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.OrderDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.DisplayFor(model => model.OrderDateTime, new { htmlAttributes = new { @class = "form-control" } })

                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.TargetDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.TargetDateTime, "DateWithPicker")
                    @Html.ValidationMessageFor(model => model.TargetDateTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.DropDeadDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.DropDeadDateTime, "DateWithPicker")
                    @Html.ValidationMessageFor(model => model.DropDeadDateTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.WorkOrderStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.DisplayFor(model => model.WorkOrderStatus, new { @class = "form-control" })

                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.DisplayFor(model => model.Total, new { htmlAttributes = new { @class = "form-control" } })

                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.CertificationRequirements, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.CertificationRequirements, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CertificationRequirements, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.CurrentWorkerId, "Current Worker", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.DisplayFor(model => model.CurrentWorker.FullName, new { @class = "form-control" })

                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-2 col-md-8">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
